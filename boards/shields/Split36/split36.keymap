#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define RSE 2
#define MLWR 1
#define WLWR 4
#define WIN 3
#define GAM 5
#define TOG 6

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    macros {
        mft: momentary_from_toggle {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings = 
                <&macro_param_1to1>,
                <&macro_tap &tog MACRO_PLACEHOLDER>,
                <&macro_param_2to1>,
                <&macro_press &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release &mo MACRO_PLACEHOLDER>,
                <&macro_param_1to1>,
                <&macro_tap &tog MACRO_PLACEHOLDER>;
        };
        mwlft: mac_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LALT>,
                <&macro_tap &kp LEFT>,
                <&macro_release &kp LALT>;
        };
        mwrht: mac_word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LALT>,
                <&macro_tap &kp RIGHT>,
                <&macro_release &kp LALT>;
        };
        wwlft: win_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp LEFT>,
                <&macro_release &kp LCTRL>;
        };
        wwrht: win_word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp RIGHT>,
                <&macro_release &kp LCTRL>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ----------------------------------------------------------------------
// |   Q   | W |  F  |  P   |  B  |        |  J  |  L  |  U  | Y |  ;   |
// |   A   | R |  S  |  T   |  G  |        |  M  |  N  |  E  | I |  O   |
// | Z/SHF | X |  C  |  D   |  V  |        |  K  |  H  |  ,  | . | /SHF |
//             | TAB | MLWR | BSP |        | SPC | RSE | RET |
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B           &kp J &kp L &kp U &kp Y &kp SEMI
                &kp A &kp R &kp S &kp T &kp G           &kp M &kp N &kp E &kp I &kp O
                &hm LSHFT Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA &kp DOT &hm RSHFT FSLH
                &kp TAB &mo MLWR &kp BSPC               &kp SPACE &mo RSE &kp RET
            >;
        };
        mac_lower_layer {
// -----------------------------------------------------------------------
// |         | HOM | UP  | END |        |        | VL- |  7  | 8 | 9 |   |
// | OPT+LFT | LFT | DWN | RT  | OPT+RT |        | VL+ |  4  | 5 | 6 |   |
// |         |     |     |     |        |        | MUT |  1  | 2 | 3 |   |
//                 |     |     |        |        |  0  | TOG |   |
            bindings = <
                &trans &kp HOME &kp UP &kp END &trans            &kp C_VOL_UP &kp N7 &kp N8 &kp N9 &trans
                &mwlft &kp LEFT &kp DOWN &kp RIGHT &mwrht        &kp C_VOL_DN &kp N4 &kp N5 &kp N6 &trans
                &trans &trans &trans &trans &trans               &kp C_MUTE &kp N1 &kp N2 &kp N3 &trans
                &trans &trans &trans                             &kp N0 &mo TOG &trans
            >;
        };
        raise_layer {
// --------------------------------------------------------
// | ! |  @  |  #  |  $  | % |        | ^ | & | * | ( | ) |
// |   | GUI | ALT | CTR | = |        | - |   |   |   |   |
// | ` |     |     |  [  |   |        |   | ] |   | \ | ' |
//           | ESC | TOG |   |        |   |   |   |
            bindings = <
                &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT          &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
                &trans &sk LGUI &sk LALT &sk LCTRL &kp EQUAL         &kp MINUS &trans &trans &trans &trans
                &kp GRAVE &trans &trans &kp LBKT &trans              &trans &kp RBKT &trans &kp BSLH &kp SQT
                &kp ESC &mo TOG &trans                               &trans &trans &trans
            >;
        };
        windows_layer {
// ----------------------------------------------------------------------
// |   Q   | W |  F  |  P   |  B  |        |  J  |  L  |  U  | Y |  ;   |
// |   A   | R |  S  |  T   |  G  |        |  M  |  N  |  E  | I |  O   |
// | Z/SHF | X |  C  |  D   |  V  |        |  K  |  H  |  ,  | . | /SHF |
//             | TAB | WLWR | BSP |        | SPC | RSE | RET |
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B           &kp J &kp L &kp U &kp Y &kp SEMI
                &kp A &kp R &kp S &kp T &kp G           &kp M &kp N &kp E &kp I &kp O
                &hm LSHFT Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA &kp DOT &hm RSHFT FSLH
                &kp TAB &mft WIN WLWR &kp BSPC          &kp SPACE &mft WIN RSE &kp RET
            >;
        };
        windows_lower_layer {
// -----------------------------------------------------------------------
// |         | HOM | UP  | END |        |        | VL- |  7  | 8 | 9 |   |
// | CTR+LFT | LFT | DWN | RT  | CTR+RT |        | VL+ |  4  | 5 | 6 |   |
// |         |     |     |     |        |        | MUT |  1  | 2 | 3 |   |
//                 |     |     |        |        |  0  | TOG |   |
            bindings = <
                &trans &kp HOME &kp UP &kp END &trans            &kp C_VOL_UP &kp N7 &kp N8 &kp N9 &trans
                &wwlft &kp LEFT &kp DOWN &kp RIGHT &wwrht        &kp C_VOL_DN &kp N4 &kp N5 &kp N6 &trans
                &trans &trans &trans &trans &trans               &trans &kp N1 &kp N2 &kp N3 &trans
                &trans &trans &trans                             &kp N0 &mo TOG &trans
            >;
        };
        game_layer {
// ---------------------------------------------------------------------
// |   Q   | W |  F  |  P  |  B  |        |  J  |  L  |  U  | Y |  ;   |
// |   A   | R |  S  |  T  |  G  |        |  M  |  N  |  E  | I |  O   |
// | Z/SHF | X |  C  |  D  |  V  |        |  K  |  H  |  ,  | . | /SHF |
//             | CTR | ALT | BSP |        | SPC | RSE | RET |
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B                &kp J &kp L &kp U &kp Y &kp SEMI
                &kp A &kp R &kp S &kp T &kp G                &kp M &kp N &kp E &kp I &kp O
                &hm LSHFT Z &kp X &kp C &kp D &kp V          &kp K &kp H &kp COMMA &kp DOT &hm RSHFT FSLH
                &kp LCTRL &kp LALT &kp BSPC                  &kp SPACE &mft GAM RSE &kp RET
            >;
        };
        toggle_layer {
// ------------------------------------------------------
// | BTP |   |   |   |   |        |   |   |   |   | BTN |
// | GAM |   |   |   |   |        |   |   |   |   | WIN |
// | BTC |   |   |   |   |        |   |   |   |   | OUT |
//           |   |   |   |        |   |   |   |
            bindings = <
                &bt BT_PRV &trans &trans &trans &trans              &trans &trans &trans &trans &bt BT_NXT
                &tog GAM &trans &trans &trans &trans                &trans &trans &trans &trans &tog WIN
                &bt BT_CLR &trans &trans &trans &trans &trans       &trans &trans &trans &out OUT_TOG
                &trans &trans &trans                                &trans &trans &trans
            >;
        };
    };
};